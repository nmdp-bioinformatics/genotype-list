/*

    gl-imgt-db  IMGT/HLA database for the gl project.
    Copyright (c) 2012-2014 National Marrow Donor Program (NMDP)

    This library is free software; you can redistribute it and/or modify it
    under the terms of the GNU Lesser General Public License as published
    by the Free Software Foundation; either version 3 of the License, or (at
    your option) any later version.

    This library is distributed in the hope that it will be useful, but WITHOUT
    ANY WARRANTY; with out even the implied warranty of MERCHANTABILITY or
    FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
    License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with this library;  if not, write to the Free Software Foundation,
    Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307  USA.

    > http://www.fsf.org/licensing/licenses/lgpl.html
    > http://www.opensource.org/licenses/lgpl-license.php

*/

-- Create Tables

use imgt_hla;

create table LOCUS
(
    LOCUS_IID            BIGINT not null auto_increment
        comment 'Unique and Arbitrary Reference to a record in the table.',
    LOCUS_NAME           VARCHAR(10) not null
        comment 'was long before we knew that genes were made of DNA and chromosomes. A A locus is the same thing [as a gene] but with a subtle difference in meaning. In classical genetics, a locus was regarded as a unit of inheritance that could not be separated or divided. This gene or locus can be separated or divided by the processes of mutation or meiosis. The position on a chromosome at which the gene for a particular trait resides; it may be occupied by any one of the alleles for the gene (2).',
    GENE_SYSTEM          VARCHAR(10) not null
        comment 'A grouping of genes with a similar location or function. In the context of HLA, this genesystem are the Human Leukocyte Antigens on chromosome 6 for the major histocompatability complex (MHC). In the context of KIR, this is the set on chromosome 9 for the Killer cell immunoglobulin-like receptors (KIRs) that are members of a group of regulatory molecules found on subsets of lymphoid cells',
    CLASS                VARCHAR(8)
        comment 'The Class Is a number, but represented in Roman Numerals.

The Class of the MHC gene dictates its structure and functional role (10).',
    CREATE_DTE           DATETIME not null
        comment 'The point in time the record was inserted to the table. This value remains fixed.',
    LAST_UPDATE_DTE      DATETIME not null
        comment 'The point in time the record was modified. Note that the last update date is equal to the created date up until such time as the record was modified.',
    LAST_UPDATE_USER_ID  VARCHAR(10) not null
        comment 'The user that either created the record or last updated the record.',
    constraint PK_LOCUS primary key (LOCUS_IID),
    constraint AK_LOCUS unique (LOCUS_NAME)
)
comment=
'A locus is the same thing [as a gene] but with a subtle difference in meaning. In classical genetics, a locus was regarded as a unit of inheritance that could not be separated or divided. This was long before we knew that genes were made of DNA and chromosomes. A gene or locus can be separated or divided by the processes of mutation or meiosis.

In the context of this structure, the locus is the parent entity to the set of curated alleles from IMGT/HLA. That is, for one Locus Name, there are many potential alleles. Note that the xsd that loads this particular structure encapsulates (And replicates) the locus information for each allele. Typically, but not exclusively, the Gene System and the Locus Name are the given name of the Gene. For example, the gene system ''HLA'' and the Locus Name ''A'' are concatenated together to make the gene name ''HLA-A''
';

create table RELEASE_VERSION
(
    RELEASE_VERSION_IID         BIGINT not null auto_increment
        comment 'Unique and Arbitrary Identifier for a row in this table. Depending on platform, this identifier is generated by a Sequence Value or an Auto Incrementor.',
    RELEASE_VER_CURRENT_RELEASE VARCHAR(10)
        comment 'The particular version of the IMGT database for the given allele. The database is updated every 3 months.',
    CREATE_DTE                  DATETIME not null
        comment 'The point in time the record was inserted to the table. This value remains fixed.',
    LAST_UPDATE_DTE             DATETIME not null
        comment 'The point in time the record was modified. Note that the last update date is equal to the created date up until such time as the record was modified.',
    LAST_UPDATE_USER_ID         VARCHAR(10) not null
        comment 'The user that either created the record or last updated the record.',
    constraint PK_RELEASE_VERSION primary key (RELEASE_VERSION_IID),
    constraint AK_RELEASE_VERSION unique (RELEASE_VER_CURRENT_RELEASE)
)
comment =
'The first public release of the IMGT/HLA database was made on the 16th December 1998 Since then the database has been updated every 3 months, in a total of 51 releases, to include all the publicly available sequences officially named by the WHO Nomenclature Committee at the time of release. This is the particular version of the IMGT database for the given allele.
';

create table ALLELE
(
    ALLELE_IID              BIGINT not null auto_increment
        comment 'Unique, Arbitrary, and immutable Reference to a record in the table.',
    LOCUS_IID               BIGINT not null
        comment 'Unique and Arbitrary Reference to a record in the table.',
    RELEASE_VERSION_IID     BIGINT not null
        comment 'Unique and Arbitrary Identifier for a row in this table. Depending on platform, this identifier is generated by a Sequence Value or an Auto Incrementor.',
    ALLELE_ID               VARCHAR(8) not null
        comment 'Packed Identifier: The Gene System name and a Unique Identifier (The IMGT/HLA Accession Number)',
    ALLELE_NAME             VARCHAR(50) not null
        comment 'The Nomenclature representation of the Allele Name (4) :
Example:  A*02:01:01:02L
                A*aa:bb:cc:dde
A  --> Locus
*   --> Type Method Ref
aa --> Allele Family
bb --> Allele Variation
cc --> Silent Mutation
dd --> Intron Variant
e --> Expressed Notation
',
    ALLELE_DATE_ASSIGNED    DATETIME
        comment 'The point in time this was ''registered'' as a valid allele (4). ',
    CREATE_DTE              DATETIME not null
        comment 'The point in time the record was inserted to the table. This value remains fixed.',
    LAST_UPDATE_DTE         DATETIME not null
        comment 'The point in time the record was modified. Note that the last update date is equal to the created date up until such time as the record was modified.',
    LAST_UPDATE_USER_ID     VARCHAR(10) not null
        comment 'The user that either created the record or last updated the record.',
    constraint PK_ALLELE primary key (ALLELE_IID),
    constraint AK_ALLELE unique (ALLELE_ID, RELEASE_VERSION_IID),
    index (RELEASE_VERSION_IID),
    index (LOCUS_IID),
    constraint FK_ALLELE_10 foreign key (RELEASE_VERSION_IID)
        references RELEASE_VERSION (RELEASE_VERSION_IID),
    constraint FK_ALLELE_11 foreign key (LOCUS_IID)
        references LOCUS (LOCUS_IID)
)
comment =
'This refers to a specific HLA allele as named in the WHO Nomenclature Committee Reports (4). An allele is one of several alternative forms of a gene occupying a given locus on a chromosome.

The report includes previous designations, the ENA/GenBank/DDBJ accession numbers (5-7), references and some information of the source of the allele
';

create table SEQUENCE
(
    SEQUENCE_IID           BIGINT not null auto_increment
        comment 'Unique and Arbitrary Reference to a record in the table.',
    ALLELE_IID             BIGINT not null
        comment 'Unique, Arbitrary, and immutable Reference to a record in the Allele Table.',
    CREATE_DTE             DATETIME not null
        comment 'The point in time the record was inserted to the table. This value remains fixed.',
    LAST_UPDATE_DTE        DATETIME not null
        comment 'The point in time the record was modified. Note that the last update date is equal to the created date up until such time as the record was modified.',
    LAST_UPDATE_USER_ID    VARCHAR(10) not null
        comment 'The user that either created the record or last updated the record.',
    constraint PK_SEQUENCE primary key (SEQUENCE_IID),
    constraint AK_SEQUENCE unique (ALLELE_IID),
    index (ALLELE_IID),
    constraint FK_SEQUENCE_01 foreign key (ALLELE_IID)
        references ALLELE (ALLELE_IID)
)
comment =
'The Collector for the pieces needed to parse the nucleotides for the allele into segments. The given pieces are the nucleotide sequence itself, a reference allele, and all the definitions needed to splice the allele sequence into the reference allele.
';

create table ALIGNMENT_REFERENCE
(
    ALIGNMENT_REFERENCE_IID    BIGINT not null auto_increment
       comment 'Unique, Arbitrary and immutable Reference to a record in the table.',
    SEQUENCE_IID               BIGINT not null
        comment 'Unique and Arbitrary Reference to a record in the table.',
    REFERENCE_ALLELE_NAME      VARCHAR(50)
        comment 'When aligning Alleles, ''insertions'' (nucleotide pairs that are ''extra'') and ''deletions'' (nucleotide pairs that are ''removed''), this concept only makes sense in context of a ''Reference'' allele. This can be a redundant reference (A*01:01:01:01 is a reference allele to itself).',
    CREATE_DTE                 DATETIME not null
        comment 'The point in time the record was inserted to the table. This value remains fixed.',
    LAST_UPDATE_DTE            DATETIME not null
        comment 'The point in time the record was modified. Note that the last update date is equal to the created date up until such time as the record was modified.',
    LAST_UPDATE_USER_ID        VARCHAR(10) not null
        comment 'The user that either created the record or last updated the record.',
    constraint PK_ALIGNMENT_REFERENCE primary key (ALIGNMENT_REFERENCE_IID),
    constraint AK_ALIGNMENT_REFERENCE unique (SEQUENCE_IID),
    index (SEQUENCE_IID),
    constraint FK_ALIGNMENT_REF_01 foreign key (SEQUENCE_IID)
        references SEQUENCE (SEQUENCE_IID)
)
comment =
'For the convenience of human beings, the complexity of the different alleles can be represented by choosing an ''example'' allele  and defining all other alleles in comparison to it. This can be slightly misleading, because in the case of ''deletions'' in one allele as compared to the reference allele, there is no intention to declare one allele as more ''complete'' than the other.

Full details of how the sequences are aligned can be found at: http://www.ebi.ac.uk/imgt/hla/nomenclature/alignments.html

The numbering convention used in these alignments is based on the recommendations published for Human Gene Mutations. These were prepared by a nomenclature-working group looking at how to name and store sequences for human allelic variants (3).
';

create table ALLELE_RLS_VER_DTL
(
    ALLELE_RLS_VER_DTL_IID       BIGINT not null auto_increment
        comment 'Unique, Arbitrary, and immutable Reference to a record in the table.',
    RELEASE_VERSION_IID          BIGINT not null
        comment 'Unique and Arbitrary Identifier for a row in this table. Depending on platform, this identifier is generated by a Sequence Value or an Auto Incrementor.',
    ALLELE_IID                   BIGINT not null
        comment 'Unique, Arbitrary, and immutable Reference to a record in the Allele Table.',
    RELEASE_VER_FIRST_RELEASED   VARCHAR(10)
        comment 'The version for which the specific allele was officially named by the WHO Nomenclature Committee. The Release is in the nomenclature 00.00.00. The first field refers to the database structure/nomenclature version, the second field the major release number, and the final field any intermediate release versions. The final field will only change when there are corrections to the database made between major releases. These corrections must be changes to the nucleotide sequence of an allele.

The first public release of the IMGT/HLA database was made on the 16th December 1998 Since then the database has been updated every 3 months, in a total of 51 releases, to include all the publicly available sequences officially named by the WHO Nomenclature Committee at the time of release (11).
',
    RELEASE_VER_LAST_UPDATED     VARCHAR(10)
        comment 'Note the Accession number of the Allele doesn''t change, but that the name itself can change. There was a major modification of names when the alleles were converted from version-2 nomenclature to version-3 nomenclature. There is also some renaming of alleles occasionally. This particular column denotes the version when that renaming took place. One can use this attribute and the alleleName for the same accession number to build the history of the various names for the allele.',
    RELEASE_VER_CONFIRMED_STATUS VARCHAR(20)
        comment '''Confirmed'' is a level of validity for an Allele. An allele will be classified as confirmed if it has been sequenced by more than one lab or sequenced from more than one cell. However you should be aware that it is possible for an allele to have been seen from multiple cells from just one lab.',
    RELEASE_VER_STATUS           VARCHAR(100)
        comment 'Identifies any ''action'' that has taken place for this Allele since the last quarterly release. New Alleles will be identified,  Sequences that have been changed will be identified, and any renaming and realignments will be pointed out. Note that the majority of status'' will  be ''Sequence Unchanged''. This,  in conjunction with the ''release_Ver_Last_Updated'', gives you a history of the changes for this particular Accession Value.',
    CREATE_DTE                   DATETIME not null
        comment 'The point in time the record was inserted to the table. This value remains fixed.',
    LAST_UPDATE_DTE              DATETIME not null
        comment 'The point in time the record was modified. Note that the last update date is equal to the created date up until such time as the record was modified.',
    LAST_UPDATE_USER_ID          VARCHAR(10) not null
        comment 'The user that either created the record or last updated the record.',
    constraint PK_ALLELE_RLS_VER_DTL primary key (ALLELE_RLS_VER_DTL_IID),
    constraint AK_ALLELE_RLS_VER_DTL unique (ALLELE_IID, RELEASE_VERSION_IID),
    index (ALLELE_IID),
    index (RELEASE_VERSION_IID),
    constraint FK_ALLELE_REL_VER_DTL_01 foreign key (ALLELE_IID)
        references ALLELE (ALLELE_IID),
    constraint FK_ALLELE_RLS_VER_DTL_01 foreign key (RELEASE_VERSION_IID)
        references RELEASE_VERSION (RELEASE_VERSION_IID)
)
comment =
'The first public release of the IMGT/HLA database was made on the 16th December 1998 Since then the database has been updated every 3 months, in a total of 51 releases, to include all the publicly available sequences officially named by the WHO Nomenclature Committee at the time of release. All alleles will have information on the release they were first included, and the release version of the latest modification to the nucleotide sequence.
';

create table G_GROUP
(
    G_GROUP_IID            BIGINT not null auto_increment
        comment 'From 01 April 2010, all groups of HLA alleles that have identical nucleotide sequences across the exons encoding the peptide binding domains (exon 2 and 3 for HLA class I and exon 2 only for HLA class II alleles) are designated by an upper case ëGí which follows the three-field allele designation of the lowest numbered allele in the group.',
    RELEASE_VERSION_IID    BIGINT not null
        comment 'Unique and Arbitrary Identifier for a row in this table. Depending on platform, this identifier is generated by a Sequence Value or an Auto Incrementor.',
    LOCUS_IID              BIGINT not null
        comment 'Unique and Arbitrary Reference to a record in the table.',
    G_GROUP_ID             VARCHAR(20) not null
        comment 'From 01 April 2010, all groups of HLA alleles that have identical nucleotide sequences across the exons encoding the peptide binding domains (exon 2 and 3 for HLA class I and exon 2 only for HLA class II alleles) are designated by an upper case ëGí which follows the three-field allele designation of the lowest numbered allele in the group.',
    G_GROUP_NAME           VARCHAR(20) not null
        comment 'The Accession Number for a ''G-Group''. Note that G-Groups can gain or lose members, but the Accesssion Number will remain fixed.',
    CREATE_DTE             DATETIME not null
        comment 'The point in time the record was inserted to the table. This value remains fixed.',
    LAST_UPDATE_DTE        DATETIME not null
        comment 'The point in time the record was modified. Note that the last update date is equal to the created date up until such time as the record was modified.',
    LAST_UPDATE_USER_ID    VARCHAR(10) not null
        comment 'The user that either created the record or last updated the record.',
    constraint PK_G_GROUP primary key (G_GROUP_IID),
    constraint AK_G_GROUP unique (G_GROUP_ID, RELEASE_VERSION_IID, LOCUS_IID),
    constraint AK_G_GROUP_02 unique (RELEASE_VERSION_IID, G_GROUP_NAME),
    index (RELEASE_VERSION_IID),
    index (LOCUS_IID),    constraint FK_G_GROUP_01 foreign key (RELEASE_VERSION_IID)
        references RELEASE_VERSION (RELEASE_VERSION_IID),
    constraint FK_G_GROUP_02 foreign key (LOCUS_IID)
        references LOCUS (LOCUS_IID)
)
comment =
'The use of Sequence Based Typing (SBT) as a method for defining the HLA type is well documented, most SBT typing strategies currently employed use the exon 2 and exon 3 sequences for HLA class I analysis and exon 2 alone for HLA class II analysis. Due to the heterozygous nature of the SBT analysis the combinations of many pairs of alleles may give an ambiguous typing result. This document includes a list of all alleles which are identical over exons 2+3 for HLA class I and exon 2 for HLA class II, in addition all ambiguous results obtained when using all alleles in the current release.

From 01 April 2010, all groups of HLA alleles that have identical nucleotide sequences across the exons encoding the peptide binding domains (exon 2 and 3 for HLA class I and exon 2 only for HLA class II alleles) are designated by an upper case ëGí which follows the three-field allele designation of the lowest numbered allele in the group.
';

create table AMBIG_COMBO_GROUP
(
    AMBIG_COMBO_GROUP_IID    BIGINT not null auto_increment
        comment 'Unique, Arbitrary,  and Immutable Identifier for a row in this table. A G-Group and an Allele is ambiguous with another G-Group and/or Allele Combination. This collects those sets.',
    RELEASE_VERSION_IID      BIGINT
        comment 'Unique and Arbitrary Identifier for a row in this table. Depending on platform, this identifier is generated by a Sequence Value or an Auto Incrementor.',
/*    LOCUS_IID                BIGINT not null
        comment 'A foreign key to the Locus table. Unique and Arbitrary Identifier for a row in this table. Depending on platform, this identifier is generated by a Sequence Value or an Auto Incrementor.', */
    AMBIG_SEQUENCE_CLOB      LONGTEXT
        comment 'The sequence that corresponds to the ''G'' group. Note that this sequence encodes the ambiguity. For example,  at The point in the sequence that would encode adenine or cytosine (A/C),  the letter ''M'' is used [[ citation needed!!! ]]',
    CREATE_DTE               DATETIME not null
        comment 'The point in time the record was inserted to the table. This value remains fixed.',
    LAST_UPDATE_DTE          DATETIME not null
        comment 'The point in time the record was modified. Note that the last update date is equal to the created date up until such time as the record was modified.',
    LAST_UPDATE_USER_ID      VARCHAR(10) not null
        comment 'The user that either created the record or last updated the record.',
    constraint PK_AMBIG_COMBO_GROUP primary key (AMBIG_COMBO_GROUP_IID),
    index (RELEASE_VERSION_IID),
    constraint FK_AMBIG_COMBO_GRP_01 foreign key (RELEASE_VERSION_IID)
        references RELEASE_VERSION (RELEASE_VERSION_IID)
/*    constraint FK_AMBIG_COMBO_GRP_02 foreign key (LOCUS_IID)
        references LOCUS (LOCUS_IID) */
)
comment =
'A G-Group and an Allele is ambiguous with another G-Group and/or Allele Combination. This collects those sets.
';

create table AMBIG_COMBO_ELEMENT
(
    AMBIG_COMBO_ELEMENT_IID    BIGINT not null auto_increment
        comment 'An Actual Pair of G-Group/Alleles that are ambiguous with everything else in this Combination Group',
    AMBIG_COMBO_GROUP_IID      BIGINT
        comment 'Unique, Arbitrary,  and Immutable Identifier for a row in this table. A G-Group and an Allele is ambiguous with another G-Group and/or Allele Combination. This collects those sets.',
/*    LOCUS_IID                  BIGINT not null
        comment 'A foreign key reference to the Locus table.', */
    G_GROUP_PART1_IID          BIGINT
        comment 'From 01 April 2010, all groups of HLA alleles that have identical nucleotide sequences across the exons encoding the peptide binding domains (exon 2 and 3 for HLA class I and exon 2 only for HLA class II alleles) are designated by an upper case ëGí which follows the three-field allele designation of the lowest numbered allele in the group.',
    ALLELE_PART1_IID           BIGINT
        comment 'Unique, Arbitrary, and immutable Reference to a record in the Allele Table.',
    G_GROUP_PART1_IND          VARCHAR(1) not null
        comment 'If True, the first part of the Combination Element is a G Group. If False, the first part of a Combination Element is an Allele',
    G_GROUP_PART2_IID          BIGINT
        comment 'From 01 April 2010, all groups of HLA alleles that have identical nucleotide sequences across the exons encoding the peptide binding domains (exon 2 and 3 for HLA class I and exon 2 only for HLA class II alleles) are designated by an upper case ëGí which follows the three-field allele designation of the lowest numbered allele in the group.',
    ALLELE_PART2_IID           BIGINT
        comment 'Unique, Arbitrary, and immutable Reference to a record in the Allele Table.',
    G_GROUP_PART2_IND          VARCHAR(1) not null
        comment 'If True, the second part of the Combination Element is a G Group. If False,  the second part of a Combination Element is an Allele',
    CREATE_DTE                 DATETIME not null
        comment 'The point in time the record was inserted to the table. This value remains fixed.',
    LAST_UPDATE_DTE            DATETIME not null
        comment 'The point in time the record was modified. Note that the last update date is equal to the created date up until such time as the record was modified.',
    LAST_UPDATE_USER_ID        VARCHAR(10) not null
        comment 'The user that either created the record or last updated the record.',
    constraint PK_AMBIG_COMBO_ELEMENT primary key (AMBIG_COMBO_ELEMENT_IID),
    index (G_GROUP_PART1_IID),
    index (ALLELE_PART1_IID),
    index (AMBIG_COMBO_GROUP_IID),
    index (G_GROUP_PART2_IID),
    index (ALLELE_PART2_IID),
    constraint FK_AMBIG_COMBO_ELEM_01 foreign key (G_GROUP_PART1_IID)
        references G_GROUP (G_GROUP_IID),
    constraint FK_AMBIG_COMBO_ELEM_02 foreign key (ALLELE_PART1_IID)
        references ALLELE (ALLELE_IID),
    constraint FK_AMBIG_COMBO_ELEM_03 foreign key (AMBIG_COMBO_GROUP_IID)
        references AMBIG_COMBO_GROUP (AMBIG_COMBO_GROUP_IID),
    constraint FK_AMBIG_COMBO_ELEM_04 foreign key (G_GROUP_PART2_IID)
        references G_GROUP (G_GROUP_IID),
    constraint FK_AMBIG_COMBO_ELEM_05 foreign key (ALLELE_PART2_IID)
        references ALLELE (ALLELE_IID)
/*    constraint FK_AMBIG_COMBO_ELEM_06 foreign key (LOCUS_IID)
        references LOCUS (LOCUS_IID) */
)
comment =
'An Actual Pair of G-Group/Alleles that are ambiguous with everything else in this Combination Group
';

create table FEATURE
(
    FEATURE_IID            BIGINT not null auto_increment
        comment 'Internal unique identifier for a feature. The Allele Id plus a value  that makes the feature unique. This is specific to the IMGT/HLA XML feed, and should be construed as an operationally unique identifier within the feed. For the order of the features within the sequence, use the ''order'' attribute.',
    SEQUENCE_IID           BIGINT
        comment 'Unique and Arbitrary Reference to a record in the table.',
    FEATURE_TYPE           VARCHAR(20)
        comment 'The Function of the Feature within the Sequence:  UTR, Exons, Introns. In the context of HLA,  the EXON (The protein-encoding portion) of the sequence is the most important.',
    FEATURE_STATUS         VARCHAR(20)
        comment 'A determination of the thoroughness of the feature. Given status'' are complete and partial.',
    FEATURE_ORDER          BIGINT
        comment 'The numbering Schema of the features within the Sequence. Use this value, rather than parsing the feature ID to build up the sequence pieces in their correct left--to-right order',
    FEATURE_NAME           VARCHAR(20)
        comment 'The Name of the Feature: UTR, Exon, Intron and its order in the allele (Left to Right).',
    CREATE_DTE             DATETIME not null
        comment 'The point in time the record was inserted to the table. This value remains fixed.',
    LAST_UPDATE_DTE        DATETIME not null
        comment 'The point in time the record was modified. Note that the last update date is equal to the created date up until such time as the record was modified.',
    LAST_UPDATE_USER_ID    VARCHAR(10) not null
        comment 'The user that either created the record or last updated the record.',
    constraint PK_FEATURE primary key (FEATURE_IID),
    constraint AK_FEATURE unique (SEQUENCE_IID, FEATURE_TYPE, FEATURE_ORDER),
    index (SEQUENCE_IID),
    constraint FK_FEATURE_01 foreign key (SEQUENCE_IID)
        references SEQUENCE (SEQUENCE_IID)
)
comment =
'Elements in Common that describe a section of the sequence. Note there is a specific order to the sequences. There are five types of features. Four are the types of segments that parse the nucleotide pair sequence. (Introns, Exons, and UTR), and the translation feature is the protein sequence that is encoded by the nucleotide pairs.
';

create table FEATURE_TRANSLATION
(
    FEATURE_TRANSLATION_IID    BIGINT not null auto_increment
        comment 'Unique and Arbitrary Reference to a record in the table.',
    FEATURE_IID                BIGINT not null
        comment 'Internal unique identifier for a feature. The Allele Id plus a value  that makes the feature unique. This is specific to the IMGT/HLA XML feed, and should be construed as an operationally unique identifier within the feed. For the order of the features within the sequence, use the ''order'' attribute.',
    FEATURE_TRANSLATION        LONGTEXT not null
        comment 'A Specific Feature of the Sequence:  Translation. This defines the Protein Sequence based on the given nucleotide pairs.',
    CREATE_DTE                 DATETIME not null
        comment 'The point in time the record was inserted to the table. This value remains fixed.',
    LAST_UPDATE_DTE            DATETIME not null
        comment 'The point in time the record was modified. Note that the last update date is equal to the created date up until such time as the record was modified.',
    LAST_UPDATE_USER_ID        VARCHAR(10) not null
        comment 'The user that either created the record or last updated the record.',
    constraint PK_FEATURE_TRANSLATION primary key (FEATURE_TRANSLATION_IID),
    constraint AK_FEATURE_TRANSLATION unique (FEATURE_IID),
    index (FEATURE_IID),
    constraint FK_FEATURE_TRANSLATION_01 foreign key (FEATURE_IID)
        references FEATURE (FEATURE_IID)
)
comment =
'A Specific Feature of the Sequence:  Translation. This defines the Protein Sequence based on the given nucleotide pairs.
';

create table CDNA_COORDINATE
(
    CDNA_COORDINATE_IID           BIGINT not null auto_increment
        comment 'Unique and Arbitrary Reference to a record in the table.',
    FEATURE_IID                   BIGINT not null
        comment 'Internal unique identifier for a feature. The Allele Id plus a value  that makes the feature unique. This is specific to the IMGT/HLA XML feed, and should be construed as an operationally unique identifier within the feed. For the order of the features within the sequence, use the ''order'' attribute.',
    CDNA_COORDINATE_START         BIGINT
        comment 'The Coding DNA (2)brackets for the given feature. For the given allele''s nucleotide sequence, this defines the beginning of the sequence feature.',
    CDNA_COORDINATE_END           BIGINT
        comment 'The Coding DNA brackets for the given feature. For the given allele''s nucleotide sequence, this defines the ending of the sequence feature.',
    CDNA_COORDINATE_READING_FRAME BIGINT
        comment 'The reading frame (2) is necessary for knowing how much of the previous feature must be used in order to group three nucleotides that encode the protein.',
    CREATE_DTE                    DATETIME not null
        comment 'The point in time the record was inserted to the table. This value remains fixed.',
    LAST_UPDATE_DTE               DATETIME not null
        comment 'The point in time the record was modified. Note that the last update date is equal to the created date up until such time as the record was modified.',
    LAST_UPDATE_USER_ID           VARCHAR(10) not null
        comment 'The user that either created the record or last updated the record.',
    constraint PK_CDNA_COORDINATE primary key (CDNA_COORDINATE_IID),
    constraint AK_CDNA_COORDINATE unique (FEATURE_IID, CDNA_COORDINATE_START),
    index (FEATURE_IID),
    constraint FK_CDNA_COORDINATE_01 foreign key (FEATURE_IID)
        references FEATURE (FEATURE_IID)
)
comment =
'The coding region DNA brackets for the given feature. The coding region represents the part of the genetic sequence that encodes the protein sequence. For the given allele''s nucleotide sequence, this defines the beginning and ending points of the sequence feature. Note the ''reading frame'' is necessary for knowing how much of the previous feature must be used in order to use the correct nucleotides for each codon.
';

create table CDNA_INDEL
(
    CDNA_INDEL_IID          BIGINT not null auto_increment
        comment 'Unique and Arbitrary Reference to a record in the table.',
    FEATURE_IID             BIGINT not null
        comment 'Internal unique identifier for a feature. The Allele Id plus a value  that makes the feature unique. This is specific to the IMGT/HLA XML feed, and should be construed as an operationally unique identifier within the feed. For the order of the features within the sequence, use the ''order'' attribute.',
    CDNA_INDEL_START        BIGINT not null
        comment 'For the given allele''s nucleotide sequence, this defines the beginning point of the sequence feature as compared to the reference allele. The ''action'' of whether this is an insertion or deletion is defined in the type.',
    CDNA_INDEL_TYPE         VARCHAR(256)
        comment 'For the given allele''s nucleotide sequence, this defines the ''action'' of whether this is an insertion or deletion on the allele as compared to the reference allele.',
    CDNA_INDEL_END          BIGINT
        comment 'For the given allele''s nucleotide sequence, this defines the ending point of the sequence feature as compared to the reference allele. The ''action'' of whether this is an insertion or deletion is defined in the type.',
    CDNA_INDEL_SIZE         BIGINT
        comment 'For the given allele''s nucleotide sequence, this defines the number of nucleotides that will be acted upon by the given action of insertion or deletion.',
    CDNA_INDEL_EXPRESSED    VARCHAR(256)
        comment 'Some mutations lie close to the exon intron border. Changes to these positions can result in the border moving causing an extension or truncation of the exonic sequence. This field is used to indicate the presence of such a mutation. Those given as N, should have the annotated bases',
    CREATE_DTE              DATETIME not null
        comment 'The point in time the record was inserted to the table. This value remains fixed.',
    LAST_UPDATE_DTE         DATETIME not null
        comment 'The point in time the record was modified. Note that the last update date is equal to the created date up until such time as the record was modified.',
    LAST_UPDATE_USER_ID     VARCHAR(10) not null
        comment 'The user that either created the record or last updated the record.',
    constraint PK_CDNA_INDEL primary key (CDNA_INDEL_IID),
    constraint AK_CDNA_INDEL unique (FEATURE_IID, CDNA_INDEL_START),
    index (FEATURE_IID),
    constraint FK_CDNA_INDEL_01 foreign key (FEATURE_IID)
        references FEATURE (FEATURE_IID)
)
comment =
'The coding region DNA brackets for the given feature. For the given allele''s nucleotide sequence, this defines the beginning and ending points of the sequence feature compared to the reference allele. The point of the exercise is to define how to take this given allele and ''replicate'' the reference allele by inserting or deleting given nucleotides.
';

create table CITATION
(
    CITATION_IID         BIGINT not null auto_increment
        comment 'Unique and Arbitrary Reference to a record in the table.',
    ALLELE_IID           BIGINT not null
        comment 'Unique, Arbitrary, and immutable Reference to a record in the Allele Table.',
    PUB_MED              BIGINT
        comment 'The unique PubMed ID for the citation. PubMed comprises over 20 million citations for biomedical literature from MEDLINE, life science journals, and online books. PubMed citations and abstracts include the fields of medicine, nursing, dentistry, veterinary medicine, the health care system, and preclinical sciences. PubMed also provides access to additional relevant Web sites and links to the other NCBI molecular biology resources (8).',
    AUTHORS              NVARCHAR(2000)
        comment 'The Authors on the Citation. Note this is a deliberate concatenation of author names. The purpose of this is to enrich the allele with some demographic information, and not track the individual authors who submit DNA sequences for curation.',
    TITLE                NVARCHAR(2000)
        comment 'The title of the publication for which the allele is documented',
    CITATION_LOCATION    NVARCHAR(2000)
        comment 'The Publication Citation of the documentation. This value is packed with the name of the publication, the volume, issue number, and the publication date.',
    CREATE_DTE           DATETIME not null
        comment 'The point in time the record was inserted to the table. This value remains fixed.',
    LAST_UPDATE_DTE      DATETIME not null
        comment 'The point in time the record was modified. Note that the last update date is equal to the created date up until such time as the record was modified.',
    LAST_UPDATE_USER_ID  VARCHAR(10) not null
        comment 'The user that either created the record or last updated the record.',
    constraint PK_CITATION primary key (CITATION_IID),
    constraint AK_CITATION unique (ALLELE_IID, PUB_MED),
    index (ALLELE_IID),
    constraint FK_CITATION_01 foreign key (ALLELE_IID)
        references ALLELE (ALLELE_IID)
)
comment =
'The Publication, with PubMed ID (8)) that was the first documentation of this allele. Note this is a many-to-many relationship in real-life (one publication can define multiple alleles, and alleles are documented by multiple parties.), but is concatenated here, as the main focus of this data structure is to document alleles.
';

create table SOURCE_MATERIAL
(
    SOURCE_MATERIAL_IID    BIGINT not null auto_increment
        comment 'Unique and Arbitrary Reference to a record in the table.',
    ALLELE_IID             BIGINT not null
        comment 'Unique, Arbitrary, and immutable Reference to a record in the Allele Table.',
    CREATE_DTE             DATETIME not null
        comment 'The point in time the record was inserted to the table. This value remains fixed.',
    LAST_UPDATE_DTE        DATETIME not null
        comment 'The point in time the record was modified. Note that the last update date is equal to the Created date up until such time as the record was modified.',
    LAST_UPDATE_USER_ID    VARCHAR(10) not null
        comment 'The user that either created the record or last updated the record.',
    constraint PK_SOURCE_MATERIAL primary key (SOURCE_MATERIAL_IID),
    constraint AK_SOURCE_MATERIAL unique (ALLELE_IID),
    index (ALLELE_IID),
    constraint FK_SOURCE_MATERIAL_01 foreign key (ALLELE_IID)
        references ALLELE (ALLELE_IID)
)
comment =
'The context for the allele: Denoting the species, race and ethnicity
';

create table ETHNICITY
(
    ETHNICITY_IID          BIGINT not null auto_increment
        comment 'Unique and Arbitrary Reference to a record in the table.',
    SOURCE_MATERIAL_IID    BIGINT not null
        comment 'Unique and Arbitrary Reference to a record in the table.',
    KNOWN_ETHNICITY        VARCHAR(255)
        comment 'In the context of HLA and KIR curated typing, alleles may be more prevalent in one population subgroup than another. This is that self-identified population sub-group known as ''ethnicity''.  Ethnicity refers to selected cultural and sometimes physical characteristics used to classify people into groups or categories considered to be significantly different from others. Common designations include ''Oriental, Caucasoid''. Note that this column is also a packed column. Changed length from 256 to 255 to overcome MySQL ''unique'' limitation',
    CREATE_DTE             DATETIME not null
        comment 'The point in time the record was inserted to the table. This value remains fixed.',
    LAST_UPDATE_DTE        DATETIME not null
        comment 'The point in time the record was modified. Note that the last update date is equal to the created date up until such time as the record was modified.',
    LAST_UPDATE_USER_ID    VARCHAR(10) not null
        comment 'The user that either created the record or last updated the record.',
    constraint PK_ETHNICITY primary key (ETHNICITY_IID),
    constraint AK_ETHNICITY unique (SOURCE_MATERIAL_IID, KNOWN_ETHNICITY),
    index (SOURCE_MATERIAL_IID),
    constraint FK_ETHNICITY_01 foreign key (SOURCE_MATERIAL_IID)
        references SOURCE_MATERIAL (SOURCE_MATERIAL_IID)
)
comment =
'In the context of HLA and KIR curated typing, alleles may be more prevalent in one population subgroup than another. This is that self-identified population sub-group known as ''ethnicity''.  Ethnicity refers to selected cultural and sometimes physical characteristics used to classify people into groups or categories considered to be significantly different from others.
';

create table SAMPLE
(
    SAMPLE_IID             BIGINT not null auto_increment
        comment 'Unique and Arbitrary Reference to a record in the table.',
    SOURCE_MATERIAL_IID    BIGINT not null
        comment 'Unique and Arbitrary Reference to a record in the table.',
    SAMPLE_NAME            VARCHAR(255)
        comment 'Individual or cell line from which the sequence was derived.

The IMGT/HLA Database does not only contain sequence data on HLA sequences it also contains a detailed record on the cell/individual from which the sequence was derived. The database provides a detailed entry for each cell including full annotation.

The database currently holds information on around 12,000 cells, and will continue to expand as new sequences are submitted to both this database and to the ENA sequence database." -- http://www.ebi.ac.uk/imgt/hla/help/cell_help.html
Changed length from 256 to 255 to overcome MySQL ''unique'' limitation',
    CREATE_DTE             DATETIME not null
        comment 'The point in time the record was inserted to the table. This value remains fixed.',
    LAST_UPDATE_DTE        DATETIME not null
        comment 'The point in time the record was modified. Note that the last update date is equal to the created date up until such time as the record was modified.',
    LAST_UPDATE_USER_ID    VARCHAR(10) not null
        comment 'The user that either created the record or last updated the record.',
    constraint PK_SAMPLE primary key (SAMPLE_IID),
    constraint AK_SAMPLE unique (SOURCE_MATERIAL_IID, SAMPLE_NAME),
    index (SOURCE_MATERIAL_IID),
    constraint FK_SAMPLE_01 foreign key (SOURCE_MATERIAL_IID)
        references SOURCE_MATERIAL (SOURCE_MATERIAL_IID)
)
comment =
'The primary identifier assigned to the source sample from which the sequence was derived. The IMGT/HLA Database does not only contain sequence data on HLA sequences it also contains a detailed record on the cell/individual from which the sequence was derived. The database provides a detailed entry for each cell including full annotation.

The database currently, Sep-2011, holds information on around 13,000 cells, and will continue to expand as new sequences are submitted to both this database and to the ENA sequence database
';

create table SPECIES
(
    SPECIES_IID            BIGINT not null auto_increment
        comment 'Unique and Arbitrary Reference to a record in the table.',
    SOURCE_MATERIAL_IID    BIGINT not null
        comment 'Unique and Arbitrary Reference to a record in the table.',
    LATIN_NAME             VARCHAR(255)
        comment 'The scientific name (species name) of any plant, animal, fungus, alga or bacterium consists of two Latinized words. The first word is the name of the genus to which the organism belongs. The second word is the specific epithet or specific term of the species. Together, the genus plus the specific epithet make up the species name. Changed length from 256 to 255 to overcome MySQL ''unique'' limitation.',
    COMMON_NAME            VARCHAR(256)
        comment 'The vernacular, colloquial, and/or popular name in general use.',
    NCBI_TAXON             BIGINT
        comment 'The unique NCBI Taxon ID for the species (9).',
    CREATE_DTE             DATETIME not null
        comment 'The point in time the record was inserted to the table. This value remains fixed.',
    LAST_UPDATE_DTE        DATETIME not null
        comment 'The point in time the record was modified. Note that the last update date is equal to the Created date up until such time as the record was modified.',
    LAST_UPDATE_USER_ID    VARCHAR(10) not null
        comment 'The user that either created the record or last updated the record.',
    constraint PK_SPECIES primary key (SPECIES_IID),
    constraint AK_SPECIES unique (SOURCE_MATERIAL_IID, LATIN_NAME),
    index (SOURCE_MATERIAL_IID),
    constraint FK_SPECIES_01 foreign key (SOURCE_MATERIAL_IID)
        references SOURCE_MATERIAL (SOURCE_MATERIAL_IID)
)
comment =
'In the context of the XML file, this is the species that is the source of the material for the allele.

"the major subdivision of a genus or subgenus, regarded as the basic category of biological classification, composed of related individuals that resemble one another, are able to breed among themselves, but are not able to breed with members of another species." -- http://dictionary.reference.com/browse/species

Taxonomic divisions are designed to match those used by the NCBI Taxonomy Database (9).
';

create table G_GROUP_ALLELE
(
    G_GROUP_ALLELE_IID     BIGINT not null auto_increment
        comment 'Unique, Arbitrary, and Immutable identifier for a row in this table. For Each G_Group,  there is a set of alleles that have identical nucleotide sequences across the exons encoding the peptide binding domains (exon 2 and 3 for HLA class I and exon 2 only for HLA class II alleles',
    G_GROUP_IID            BIGINT not null
        comment 'From 01 April 2010, all groups of HLA alleles that have identical nucleotide sequences across the exons encoding the peptide binding domains (exon 2 and 3 for HLA class I and exon 2 only for HLA class II alleles) are designated by an upper case ëGí which follows the three-field allele designation of the lowest numbered allele in the group.',
    ALLELE_IID             BIGINT not null
        comment 'Unique, Arbitrary, and immutable Reference to a record in the Allele Table.',
    CREATE_DTE             DATETIME not null
        comment 'The point in time the record was inserted to the table. This value remains fixed.',
    LAST_UPDATE_DTE        DATETIME not null
        comment 'The point in time the record was modified. Note that the last update date is equal to the created date up until such time as the record was modified.',
    LAST_UPDATE_USER_ID    VARCHAR(10) not null
        comment 'The user that either created the record or last updated the record.',
    constraint PK_G_GROUP_ALLELE primary key (G_GROUP_ALLELE_IID),
    constraint AK_G_GROUP_ALLELE unique (G_GROUP_IID, ALLELE_IID),
    index (G_GROUP_IID),
    index (ALLELE_IID),
    constraint FK_G_GROUP_ALLELE_01 foreign key (G_GROUP_IID)
        references G_GROUP (G_GROUP_IID),
    constraint FK_G_GROUP_ALLELE_02 foreign key (ALLELE_IID)
        references ALLELE (ALLELE_IID)
)
comment =
'For Each G_Group,  there is a set of alleles that have identical nucleotide sequences across the exons encoding the peptide binding domains (exon 2 and 3 for HLA class I and exon 2 only for HLA class II alleles
';

create table G_GRP_RLS_VER_DTL
(
    G_GRP_RLS_VER_DETAIL_IID     BIGINT not null auto_increment
        comment 'Unique, Arbitrary, and Immutable identifier for a row in this table.',
    RELEASE_VERSION_IID          BIGINT not null
        comment 'Unique and Arbitrary Identifier for a row in this table. Depending on platform, this identifier is generated by a Sequence Value or an Auto Incrementor.',
    LOCUS_IID                    BIGINT not null
        comment 'Unique and Arbitrary Reference to a record in the table.',
    G_GROUP_IID                  BIGINT not null
        comment 'From 01 April 2010, all groups of HLA alleles that have identical nucleotide sequences across the exons encoding the peptide binding domains (exon 2 and 3 for HLA class I and exon 2 only for HLA class II alleles) are designated by an upper case ëGí which follows the three-field allele designation of the lowest numbered allele in the group.',
    RELEASE_VER_FIRST_RELEASED   VARCHAR(10)
        comment 'The version for which the specific allele was officially named by the WHO Nomenclature Committee. The Release is in the nomenclature 00.00.00. The first field refers to the database structure/nomenclature version, the second field the major release number, and the final field any intermediate release versions. The final field will only change when there are corrections to the database made between major releases. These corrections must be changes to the nucleotide sequence of an allele.

The first public release of the IMGT/HLA database was made on the 16th December 1998 Since then the database has been updated every 3 months, in a total of 51 releases, to include all the publicly available sequences officially named by the WHO Nomenclature Committee at the time of release (11).',
    RELEASE_VER_LAST_UPDATED     VARCHAR(10)
        comment 'Note the Accession number of the Allele doesn''t change, but that the name itself can change. There was a major modification of names when the alleles were converted from version-2 nomenclature to version-3 nomenclature. There is also some renaming of alleles occasionally. This particular column denotes the version when that renaming took place. One can use this attribute and the alleleName for the same accession number to build the history of the various names for the allele.',
    RELEASE_VER_CONFIRMED_STATUS VARCHAR(20)
        comment '''Confirmed'' is a level of validity for an Allele. An allele will be classified as confirmed if it has been sequenced by more than one lab or sequenced from more than one cell. However you should be aware that it is possible for an allele to have been seen from multiple cells from just one lab.',
    RELEASE_VER_STATUS           VARCHAR(100)
        comment 'Identifies any ''action'' that has taken place for this Allele since the last quarterly release. New Alleles will be identified,  Sequences that have been changed will be identified, and any renaming and realignments will be pointed out. Note that the majority of status'' will  be ''Sequence Unchanged''. This,  in conjunction with the ''release_Ver_Last_Updated'', gives you a history of the changes for this particular Accession Value.',
    CREATE_DTE                   DATETIME not null
        comment 'The point in time the record was inserted to the table. This value remains fixed.',
    LAST_UPDATE_DTE              DATETIME not null
        comment 'The point in time the record was modified. Note that the last update date is equal to the created date up until such time as the record was modified.',
    LAST_UPDATE_USER_ID          VARCHAR(10) not null
        comment 'The user that either created the record or last updated the record.',
    constraint PK_G_GRP_RLS_VER_DTL primary key (G_GRP_RLS_VER_DETAIL_IID),
    constraint AK_G_GRP_RLS_VER_DETAIL unique (RELEASE_VERSION_IID, G_GROUP_IID),
    index (G_GROUP_IID),
    index (LOCUS_IID),
    index (RELEASE_VERSION_IID),
    constraint FK_G_GRP_RLS_VER_DTL_01 foreign key (G_GROUP_IID)
        references G_GROUP (G_GROUP_IID),
    constraint FK_G_GRP_RLS_VER_DTL_02 foreign key (LOCUS_IID)
        references LOCUS (LOCUS_IID),
    constraint FK_G_GRP_RLS_VER_DTL_03 foreign key (RELEASE_VERSION_IID)
        references RELEASE_VERSION (RELEASE_VERSION_IID)
)
comment =
'The first public release of the IMGT/HLA database was made on the 16th December 1998 Since then the database has been updated every 3 months, in a total of 51 releases, to include all the publicly available sequences officially named by the WHO Nomenclature Committee at the time of release. All alleles will have information on the release they were first included, and the release version of the latest modification to the nucleotide sequence.
';

create table INCOMPLETE_ALLELE
(
    INCOMPLETE_ALLELE_IID    BIGINT not null auto_increment
        comment 'Unique,  Arbitrary, and Immutable identifier for a row in this table. Not every Allele is fully sequenced across the exons encoding the peptide binding domains (exon 2 and 3 for HLA class I and exon 2 only for HLA class II alleles. This allele is eked out with information from another allele (usually the allele that is the basis of the G-Group Name).',
    RELEASE_VERSION_IID      BIGINT not null
        comment 'Unique and Arbitrary Identifier for a row in this table. Depending on platform, this identifier is generated by a Sequence Value or an Auto Incrementor.',
    PARTIAL_ALLELE_IID       BIGINT not null
        comment 'Unique, Arbitrary, and immutable Reference to a record in the Allele Table.',
    EXTENSION_ALLELE_IID     BIGINT not null
        comment 'Unique, Arbitrary, and immutable Reference to a record in the Allele Table.',
    CREATE_DTE               DATETIME not null
        comment 'The point in time the record was inserted to the table. This value remains fixed.',
    LAST_UPDATE_DTE          DATETIME not null
        comment 'The point in time the record was modified. Note that the last update date is equal to the created date up until such time as the record was modified.',
    LAST_UPDATE_USER_ID      VARCHAR(10) not null
        comment 'The user that either created the record or last updated the record.',
    constraint PK_INCOMPLETE_ALLELE primary key (INCOMPLETE_ALLELE_IID),
    constraint AK_INCOMPLETE_ALLELE unique (RELEASE_VERSION_IID, PARTIAL_ALLELE_IID, EXTENSION_ALLELE_IID),
    index (PARTIAL_ALLELE_IID),
    index (EXTENSION_ALLELE_IID),
    index (RELEASE_VERSION_IID),
    constraint FK_INCOMPLETE_ALLELE_01 foreign key (PARTIAL_ALLELE_IID)
        references ALLELE (ALLELE_IID),
    constraint FK_INCOMPLETE_ALLELE_02 foreign key (EXTENSION_ALLELE_IID)
        references ALLELE (ALLELE_IID),
    constraint FK_INCOMPLETE_ALLELE_03 foreign key (RELEASE_VERSION_IID)
        references RELEASE_VERSION (RELEASE_VERSION_IID)
)
comment =
'Not every Allele is fully sequenced across the exons encoding the peptide binding domains (exon 2 and 3 for HLA class I and exon 2 only for HLA class II alleles. This allele is eked out with information from another allele (usually the allele that is the basis of the G-Group Name).
';

create table NUC_SEQUENCE
(
    NUC_SEQUENCE_IID       BIGINT not null auto_increment
        comment 'Unique and Arbitrary Reference to a record in the table.',
    SEQUENCE_IID           BIGINT not null
        comment 'Unique and Arbitrary Reference to a record in the table.',
    NUC_SEQUENCE           LONGTEXT
        comment 'The precise order of bases ñA,T,G,Cñ in a segment of DNA that is defined as the Allele. This sequence is parsed into the introns, exons, and UTR sequences that encode a protein sequence.',
    CREATE_DTE             DATETIME not null
        comment 'The point in time the record was inserted to the table. This value remains fixed.',
    LAST_UPDATE_DTE        DATETIME not null
        comment 'The point in time the record was modified. Note that the last update date is equal to the created date up until such time as the record was modified.',
    LAST_UPDATE_USER_ID    VARCHAR(10) not null
        comment 'The user that either created the record or last updated the record.',
    constraint PK_NUC_SEQUENCE primary key (NUC_SEQUENCE_IID),
    constraint AK_NUC_SEQUENCE unique (SEQUENCE_IID),
    index (SEQUENCE_IID),
    constraint FK_NUC_SEQUENCE_01 foreign key (SEQUENCE_IID)
        references SEQUENCE (SEQUENCE_IID)
)
comment =
'The precise order of basesñA, T, G, Cñin a segment of DNA that is defined as the Allele. This sequence is parsed into the introns, exons, and UTR sequences that encode a protein sequence.
';

create table REMOVED_ALLELE
(
    REMOVED_ALLELE_IID     BIGINT not null auto_increment
        comment 'Unique,  Arbitrary, and Immutable Identifier for a row in this table.
For a given release of IMGT/HLA,  there are spcific Alleles per locus that are not considered for analysis. Typically, this is due to the number and complexity of the in/dels within the spcific allele,  and such does not qualify as an allele that encodes the identical nucleotide sequences across the exons encoding the peptide binding domains (exon 2 and 3 for HLA class I and exon 2 only for HLA class II alleles)',
    RELEASE_VERSION_IID    BIGINT not null
        comment 'Unique and Arbitrary Identifier for a row in this table. Depending on platform, this identifier is generated by a Sequence Value or an Auto Incrementor',
    ALLELE_IID             BIGINT not null
        comment 'Unique, Arbitrary, and immutable Reference to a record in the Allele Table.',
    LOCUS_IID              BIGINT not null
        comment 'Unique and Arbitrary Reference to a record in the table.',
    CREATE_DTE             DATETIME not null
        comment 'The point in time the record was inserted to the table. This value remains fixed.',
    LAST_UPDATE_DTE        DATETIME not null
        comment 'The point in time the record was modified. Note that the last update date is equal to the created date up until such time as the record was modified.',
    LAST_UPDATE_USER_ID    VARCHAR(10) not null
        comment 'The user that either created the record or last updated the record.',
    constraint PK_REMOVED_ALLELE primary key (REMOVED_ALLELE_IID),
    constraint AK_REMOVED_ALLELE unique (ALLELE_IID, RELEASE_VERSION_IID),
    index (ALLELE_IID),
    index (RELEASE_VERSION_IID),
    index (LOCUS_IID),
    constraint FK_REMOVED_ALLELE_01 foreign key (ALLELE_IID)
        references ALLELE (ALLELE_IID),
    constraint FK_REMOVED_ALLELE_02 foreign key (RELEASE_VERSION_IID)
        references RELEASE_VERSION (RELEASE_VERSION_IID),
    constraint FK_REMOVED_ALLELE_03 foreign key (LOCUS_IID)
        references LOCUS (LOCUS_IID)
)
comment =
'For a given release of IMGT/HLA,  there are spcific Alleles per locus that are not considered for analysis. Typically, this is due to the number and complexity of the in/dels within the spcific allele,  and such does not qualify as an allele that encodes the identical nucleotide sequences across the exons encoding the peptide binding domains (exon 2 and 3 for HLA class I and exon 2 only for HLA class II alleles)
';

create table SEQUENCE_COORDINATE
(
    SEQUENCE_COORDINATE_IID      BIGINT not null auto_increment
        comment 'Unique and Arbitrary Reference to a record in the table.',
    FEATURE_IID                  BIGINT not null
        comment 'Internal unique identifier for a feature. The Allele Id plus a value  that makes the feature unique. This is specific to the IMGT/HLA XML feed, and should be construed as an operationally unique identifier within the feed. For the order of the features within the sequence, use the ''order'' attribute.',
    SEQUENCE_COORDINATE_START    BIGINT
        comment 'For the given allele''s nucleotide sequence, this defines the beginning of the sequence feature.',
    SEQUENCE_COORDINATE_END      BIGINT
        comment 'For the given allele''s nucleotide sequence, this defines the ending points of the sequence feature.',
    CREATE_DTE                   DATETIME not null
        comment 'The point in time the record was inserted to the table. This value remains fixed.',
    LAST_UPDATE_DTE              DATETIME not null
        comment 'The point in time the record was modified. Note that the last update date is equal to the created date up until such time as the record was modified.',
    LAST_UPDATE_USER_ID          VARCHAR(10) not null
        comment 'The user that either created the record or last updated the record.',
    constraint PK_SEQUENCE_COORDINATE primary key (SEQUENCE_COORDINATE_IID),
    constraint AK_SEQUENCE_COORDINATE unique (FEATURE_IID, SEQUENCE_COORDINATE_START),
    index (FEATURE_IID),
    constraint FK_SEQUENCE_COORDINATE_01 foreign key (FEATURE_IID)
        references FEATURE (FEATURE_IID)
)
comment =
'For the given allele''s nucleotide sequence, this defines the beginning and ending points of the sequence feature.
';

create table SOURCE_XREF
(
    SOURCE_XREF_IID        BIGINT not null auto_increment
        comment 'Unique and Arbitrary Reference to a record in the table.',
    ALLELE_IID             BIGINT not null
        comment 'Unique, Arbitrary, and immutable Reference to a record in the Allele Table.',
    XREF                   VARCHAR(20)
        comment 'The source-specific accession number of each sequence, and these can be used to retrieve the sequence files from either the ENA (7), GenBank (5) or DDBJ (6) data libraries. ENA = European Molecular Biology Laboratory/ GenBank is the NIH genetic sequence database/ DDBJ = DNA Data Bank of Japan',
    PID                    VARCHAR(20)
        comment 'The Protein Identifier is a unique identifier assigned to the CDS section of an ENA entry, UniProt (12) uses the protein_id to map to ENA sequences defined within the CDS
feature locations.',
    CREATE_DTE             DATETIME not null
        comment 'The point in time the record was inserted to the table. This value remains fixed.',
    LAST_UPDATE_DTE        DATETIME not null
        comment 'The point in time the record was modified. Note that the last update date is equal to the Created date up until such time as the record was modified.',
    LAST_UPDATE_USER_ID    VARCHAR(10) not null
        comment 'The user that either created the record or last updated the record.',
    constraint PK_SOURCE_XREF primary key (SOURCE_XREF_IID),
    constraint AK_SOURCE_XREF unique (ALLELE_IID, XREF),
    index (ALLELE_IID),
    constraint FK_SOURCE_XREF_01 foreign key (ALLELE_IID)
        references ALLELE (ALLELE_IID)
)
comment =
'The source-specific accession number of each sequence, and these can be used to retrieve the sequence files from either the ENA, GenBank or DDBJ data libraries. ENA = European Nucleotide Archive (previously EMBL Nucleotide Database) / GenBank is the NIH genetic sequence database/ DDBJ = DNA Data Bank of Japan
';
