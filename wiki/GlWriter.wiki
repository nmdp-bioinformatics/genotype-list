#summary An overview of the GlWriter

= Introduction =

The GL Service utilizes the {{{GlWriter}}} to write GLResources to a specific format.

In brief, the GL Writer:
 * 

= Details =

==Components==
The following classes are _part_ of the GL Writer:
|| *Name* || *Function* ||
|| [http://code.google.com/p/genotype-list/source/browse/trunk/gl-service/src/main/java/org/immunogenomics/gl/service/GlWriter.java GlWriter.java] || Interface - Write a specified resource to a specified writer ||
|| [http://code.google.com/p/genotype-list/source/browse/trunk/gl-service/src/main/java/org/immunogenomics/gl/service/writer/AbstractTemplatedGlWriter.java AbstractTemplatedGlWriter.java]|| Abstract Templated Writer, implements GlWriter ||
|| [ GlstringGlWriter.java] || implements GlWriter ||
|| [ HtmlGlWriter.java] || extends [GlWriter#AbstractTemplatedGlWriter AbstractTemplatedGlWriter] ||
|| [ JsonGlWriter.java] || implements GlWriter ||
|| [ N3GlWriter.java] || extends [GlWriter#AbstractTemplatedGlWriter AbstractTemplatedGlWriter] ||
|| [ RdfGlWriter.java] || extends [GlWriter#AbstractTemplatedGlWriter AbstractTemplatedGlWriter] ||
|| [ XlinkXmlGlWriter.java] || extends [GlWriter#AbstractTemplatedGlWriter AbstractTemplatedGlWriter] ||
|| [ XmlGlWriter.java] || extends [GlWriter#AbstractTemplatedGlWriter AbstractTemplatedGlWriter] ||


The following classes are _referenced_ by the GL Writer:
|| *Name* || *Function* ||


==How it Works==
===Structure===
{format}GlWriter extends AbstractTemplatedGlWriter, which implements GlWriter.

glwriter ... getContentType() and writeXXX() methods
abstracttemplatedglwriter defines writeXXX() methods for undefined resource templates and resources and writers that are plugged in
writers provide resource templates based on desired file format .

For example, the XmlGlWriter provides resource templates that validate to an XML Schema (gl-resource.xsd).

===Initializing the Writer===
There are several different implementations of the {{{GlWriter}}}. 
When the SparkGlService is initialized, all types of the {{{GlWriter}}} are passed in via a map linking each file extension to each writer.

{{{
SparkGlService(@Namespace final String ns, final GlReader glReader, final IdResolver idResolver, final Map<String, GlWriter> glWriters)
}}} 

===Writing===
format is selected via spark, map maps extension to writer type, 

==!AbstractTemplatedGlWriter==
The Abstract Templated GL Writer acts as a core for most of the various writers. It provides two main components: {{{writeXXX()}}} methods and undefined templates for each resource, to be determined by the requirements of each file format. 

Each resource type has its own write method, in the format {{{writeXXX, resource, writer)}}}. These methods write the various GLResources to the desired file format. 

The templates are used within the {{{writeXXX()}}} methods to produce content based on the file type. For example, the {{{XmlGlWriter}}} provides resource-specific templates that, when filled by the writer, validate to an XML Schema (gl-resource.xsd). 

The only classes that do not take advantage of the {{{AbstractTemplatedGlWriter}}} have implemented the {{{writeXXX()}}} separately for various reasons. 

Using Genotype as an example:
{{{
@Override
    public final void writeGenotype(final Genotype genotype, final Writer writer) throws IOException {
        checkNotNull(genotype);
        checkNotNull(writer);
        VelocityContext context = new VelocityContext();
        context.put("genotype", genotype);
        genotypeTemplate.merge(context, writer);
    }
}}}