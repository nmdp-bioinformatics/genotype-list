#summary Implementation of the GlRegistry
#labels Phase-Implementation

= Introduction =

The GL Service utilizes the {{{GlRegistry}}} to add GLResources to their respective caches.

In brief, all implementations of the resolver:
 * Take in a GL Resource of any type
 * Add entries to the ID and GL String caches:
   * ID -> [GLResources GL Resource]
   * GL String -> ID

= Details =

==Components==
The following classes are _part_ of the GlRegistry:
|| *Name* || *Function* ||
|| [http://code.google.com/p/genotype-list/source/browse/trunk/gl-service/src/main/java/org/immunogenomics/gl/service/GlRegistry.java GL Registry.java] || Interface ||
|| [http://code.google.com/p/genotype-list/source/browse/trunk/gl-service/src/main/java/org/immunogenomics/gl/service/cache/CacheGlRegistry.java CacheGlRegistry.java] || Cache implementation of the GL Registry ||
|| [http://code.google.com/p/genotype-list/source/browse/trunk/gl-service-jdbc/src/main/java/org/immunogenomics/gl/service/jdbc/JdbcGlRegistry.java JdbcGlRegistry.java] || JDBC implementation of the GL Registry ||
|| [http://code.google.com/p/genotype-list/source/browse/trunk/gl-service-redis/src/main/java/org/immunogenomics/gl/service/redis/JedisGlRegistry.java JedisGlRegistry.java] || Redis/Jedis implementation of the GL Registry ||
|| [http://code.google.com/p/genotype-list/source/browse/trunk/gl-service-voldemort/src/main/java/org/immunogenomics/gl/service/voldemort/VoldemortGlRegistry.java VoldemortGlRegistry.java] || Voldemort implementation of the GL Registry ||

The following classes are _referenced_ by the GlRegistry:
|| *Name* || *Function* ||
|| None || n/a || 

==How it Works==

===Initializing an Implementation===
There are several different implementations of the {{{GlRegistry}}}: Cache, JDBC, Jedis/Redis, and Voldemort. For any given instance of the application, the resolver implementation is determined when the [GLReader GlReader] is initialized.
{{{
GlstringGlReader(final GlstringResolver glstringResolver, final IdResolver idResolver, final GlRegistry glRegistry)
}}}

The {{{GlRegistry}}} is then called by the Reader. 
{{{
glRegistry.registerLocus(locus);
}}}


===Registering===
The register's mechanics vary depending on the implementation, but the basic logic remains the same.

The ID and GL String are extracted as needed from the GL Resource, and entered in each cache.

The following example is from the CacheGlRegistry: 
{{{
loci.put(locus.getId(), locus);
locusIds.put(locus.getGlstring(), locus.getId());
}}}


=====Cache:=====
Uses {{{com.google.common.cache.Cache}}}

=====JDBC:=====
Runs SQL queries via {{{org.apache.commons.dbutils.QueryRunner}}}

=====Redis/Jedis:=====
Uses {{{redis.clients.jedis.Jedis}}}

=====Voldemort:=====
Uses {{{voldemort.client.StoreClient}}}